@model eShop.Models.AdvanceRepayment

@{
    ViewBag.Title = "Uang Muka Penjualan";
    ViewBag.Current = "AdvanceRepayments";
}

@section Styles {
    @Styles.Render("~/style/mvcgrid")
    @Styles.Render("~/style/MvcDatalist")
    @Styles.Render("~/style/Select2")
}

<style>
    .tablegrid-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.1);
    }
</style>

@Html.Partial("MvcDatalist/_Dialog")

<div class="content-wrapper">
    <section class="content">
        <div class="row">
            <div class="col-md-4">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <i class="fa fa-plus"></i>

                        <h3 class="box-title">Edit - Uang Muka Penjualan</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Id)
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.LabelFor(model => model.Code)
                                    @Html.HiddenFor(model => model.Code)
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2 text-center">
                                    @Html.LabelFor(model => model.Active)
                                    <div class="checkbox text-center">
                                        @Html.CheckBoxFor(model => model.Active)
                                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Date)
                                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.MasterBusinessUnitId)
                                    @Html.HiddenFor(model => model.MasterBusinessUnitId)
                                    @Html.EditorFor(model => model.MasterBusinessUnit.Name, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.MasterBusinessUnitId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.MasterRegionId)
                                    @Html.DropDownList("MasterRegionId", null, "- Pilih Wilayah -", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MasterRegionId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Notes)
                                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase" } })
                                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-6 text-left">
                                        <a href="@Url.Action("Index")" id="cancel" class="btn btn-danger" style="margin-top:10px">
                                            Cancel
                                        </a>
                                    </div>
                                    <div class="col-md-6 text-right">
                                        <input type="submit" value="Save" class="btn btn-primary" style="margin-top:10px" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        }
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->

            <div class="col-md-8">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <div class="col-md-6">
                            <i class="fa fa-info"></i>

                            <h3 class="box-title">Details</h3>
                        </div>
                        <div class="text-right col-md-12">
                            <label style="font-weight: bold">TOTAL :</label>
                            <input type="text" id="Total" value="@Model.Total" disabled="disabled" style="text-align:right;" />
                            <button id="btnAdd" class="btn btn-success mx-1" href="@Url.Action("DetailsCreate", "AdvanceRepayments")">
                                <i class="fa fa-plus"></i> Add
                            </button>
                            <button id="DetailsBatchDelete" class="btn btn-danger mx-1">
                                <i class="fa fa-trash"></i> Delete
                            </button>
                        </div>

                        <div class="box-body" style="overflow:auto; white-space: nowrap">
                            @Html.AjaxGrid(Url.Action("OthersGrid", new { Id = Html.ValueFor(model => model.Id) }), new { id = "data-table" })
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>
                <!-- /.col -->
            </div>
        </div>
    </section>
</div>
<div class="modal fade" id="addModal" role="dialog" aria-hidden="true" data-backdrop="static">
    <div id="addContainer">
    </div>
</div>

<div class="modal fade" id="editModal" role="dialog" aria-hidden="true" data-backdrop="static">
    <div id="editContainer">
    </div>
</div>

<div class="modal fade" id="viewModal" role="dialog" aria-hidden="true" data-backdrop="static">
    <div id="viewContainer">
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/mvcgrid")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/script/Select2")
    @Scripts.Render("~/bundles/unobtrusive")
    @Scripts.Render("~/bundles/MvcDatalist")
    @Scripts.Render("~/script/tableHeadFixer")
    @Scripts.Render("~/script/InputMask")

    <script>
        $.validator.methods.range = function (value, element, param)
        {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element)
        {
            return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
    </script>

    <script>

        [].forEach.call(document.getElementsByClassName('datalist'), function (element)
        {
            new MvcDatalist(element);
        });

        $('.select2').select2();

        [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element)
        {
            new MvcGrid(element);
        });

        Inputmask.extendAliases({
            'myNum2': {
                alias: 'currency',
                digits: 2,
                digitsOptional: false,
                integerDigits: 12,
                prefix: '',
                groupSeparator: '.',
                radixPoint: ',',
                groupSize: 3,
                rightAlign: false,
                autoUnmask: true
            }
        });

        $('#btnAdd').click(function (event)
        {
            event.preventDefault();
            var url = $(this).attr("href") + "?advanceRepaymentId=" + $("input#Id").val();
            $.get(url, function (data)
            {
                $('#addContainer').html(data);
                $('#addModal').modal('show');

                Inputmask("myNum2").mask("#Total");

                [].forEach.call(document.getElementsByClassName('datalist2'), function (element) {
                    new MvcDatalist(element);
                });

                $('form').each(function () {
                    var $el = $(this);
                    $el.data('validator', null);
                    $.validator.unobtrusive.parse($el);
                });

                $("#Type").on("change", function () {
                    var divMasterBank = document.getElementById("DivMasterBank");
                    var divGiroCheque = document.getElementById("DivGiroCheque");
                    var divMasterCost = document.getElementById("DivMasterCost");
                    var divRefference = document.getElementById("DivRefference");
                    var type = $("#Type").val();

                    if (type == 0 || type == "") {
                        divMasterBank.style.display = "none";
                        divGiroCheque.style.display = "none";
                        divMasterCost.style.display = "none";
                        divRefference.style.display = "block";
                    }
                    else if (type == 1 || type == 2 || type == 3) {
                        divMasterBank.style.display = "block";
                        divGiroCheque.style.display = "none";
                        divMasterCost.style.display = "none";
                        divRefference.style.display = "block";
                    }
                    else if (type == 4) {
                        divMasterBank.style.display = "none";
                        divGiroCheque.style.display = "block";
                        divMasterCost.style.display = "none";
                        divRefference.style.display = "block";
                    }
                    else if (type == 5) {
                        divMasterBank.style.display = "none";
                        divGiroCheque.style.display = "none";
                        divMasterCost.style.display = "block";
                        divRefference.style.display = "block";
                    }
                }).change();
            });
        });

        function CreateSuccess(data)
        {
            if (data !== "success")
            {
                $('#addContainer').html(data);
                return;
            }
            $('#addModal').modal('hide');
            $('#addContainer').html("");

            var grid = new MvcGrid(document.querySelector('#other-table'));
            grid.reload();

            var param = { AdvanceRepaymentId: $("#Id").val() };
            var options = {};

            options.url = "/AdvanceRepayments/GetTotal";
            options.type = "POST";
            options.headers = headers;
            options.data = JSON.stringify(param);
            options.contentType = "application/json";
            options.dataType = "json";
            options.success = function (msg)
            {
                document.getElementById('Total').value = msg;
            };
            $.ajax(options);
        }

        function EditSuccess(data)
        {
            if (data !== "success")
            {
                $('#editContainer').html(data);
                return;
            }
            $('#editModal').modal('hide');
            $('#editContainer').html("");

            var grid = new MvcGrid(document.querySelector('#other-table'));
            grid.reload();

            var param = { AdvanceRepaymentId: $("#Id").val() };
            var options = {};

            options.url = "/AdvanceRepayments/GetTotal";
            options.type = "POST";
            options.headers = headers;
            options.data = JSON.stringify(param);
            options.contentType = "application/json";
            options.dataType = "json";
            options.success = function (msg)
            {
                document.getElementById('Total').value = msg;
            };
            $.ajax(options);
        }
    </script>

    <script>

        var token = $('input[name="__RequestVerificationToken"]').val();
        var headers = {};
        headers['__RequestVerificationToken'] = token;

        $(document).ready(function ()
        {
            $("#DetailsBatchDelete").click(function ()
            {
                var selectedIDs = new Array();
                $('#other-table tbody tr').find('td:first :checkbox').each(function ()
                {
                    if ($(this).prop('checked'))
                    {
                        selectedIDs.push($(this).val());
                    }
                });

                if (selectedIDs.length <= 0)
                {
                    bootbox.alert("Pilih salah satu data yang akan dihapus.");
                }
                else
                {
                    bootbox.confirm("Apakah anda yakin akan menghapus " + selectedIDs.length + " data?", function (result)
                    {
                        if (result)
                        {
                            var options = {};
                            options.url = "/AdvanceRepayments/DetailsBatchDelete";
                            options.type = "POST";
                            options.headers = headers;
                            options.data = JSON.stringify(selectedIDs);
                            options.contentType = "application/json";
                            options.dataType = "json";
                            options.success = function (msg)
                            {
                                bootbox.alert(msg);

                                [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element)
                                {
                                    new MvcGrid(element).reload();
                                });

                                var param = { AdvanceRepaymentId: $("#Id").val() };
                                var options2 = {};

                                options2.url = "/AdvanceRepayments/GetTotal";
                                options2.type = "POST";
                                options2.headers = headers;
                                options2.data = JSON.stringify(param);
                                options2.contentType = "application/json";
                                options2.dataType = "json";
                                options2.success = function (msg)
                                {
                                    document.getElementById('Total').value = msg;
                                };
                                $.ajax(options2);
                            };
                            options.error = function ()
                            {
                                bootbox.alert("Terjadi kesalahan saat menghapus.");
                            };
                            $.ajax(options);
                        }
                    });
                }
            });
        });

        document.addEventListener('reloadend', function (e)
        {
            $('#CheckAll').click(function ()
            {
                var checkedStatus = this.checked;
                $('#other-table tbody tr').find('td:first :checkbox').each(function ()
                {
                    $(this).prop('checked', checkedStatus);
                });
            });

            $('#other-table').on("click", ".edit-data", function (event)
            {
                event.preventDefault();
                var url = $(this).attr("href");
                $.get(url, function (data)
                {
                    $('#editContainer').html(data);
                    $('#editModal').modal('show');

                    Inputmask("myNum2").mask("#Total");

                    [].forEach.call(document.getElementsByClassName('datalist2'), function (element) {
                        new MvcDatalist(element);
                    });

                    $('form').each(function () {
                        var $el = $(this);
                        $el.data('validator', null);
                        $.validator.unobtrusive.parse($el);
                    });

                    $("#Type").on("change", function () {
                        var divMasterBank = document.getElementById("DivMasterBank");
                        var divGiroCheque = document.getElementById("DivGiroCheque");
                        var divMasterCost = document.getElementById("DivMasterCost");
                        var divRefference = document.getElementById("DivRefference");
                        var type = $("#Type").val();

                        if (type == 0 || type == "") {
                            divMasterBank.style.display = "none";
                            divGiroCheque.style.display = "none";
                            divMasterCost.style.display = "none";
                            divRefference.style.display = "block";
                        }
                        else if (type == 1 || type == 2 || type == 3) {
                            divMasterBank.style.display = "block";
                            divGiroCheque.style.display = "none";
                            divMasterCost.style.display = "none";
                            divRefference.style.display = "block";
                        }
                        else if (type == 4) {
                            divMasterBank.style.display = "none";
                            divGiroCheque.style.display = "block";
                            divMasterCost.style.display = "none";
                            divRefference.style.display = "block";
                        }
                        else if (type == 5) {
                            divMasterBank.style.display = "none";
                            divGiroCheque.style.display = "none";
                            divMasterCost.style.display = "block";
                            divRefference.style.display = "block";
                        }
                    }).change();
                });
            });

            $('.fix-table').tableHeadFixer({ left: 2 });
        });
    </script>
}
