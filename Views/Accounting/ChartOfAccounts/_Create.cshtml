@model eShop.Models.ChartOfAccount

@{
    Layout = null;
}

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <h4 class="modal-title">Bagan Akun</h4>
        </div>
        <div class="modal-body">
            <div id="divEmp">
                @using (Ajax.BeginForm("Create", "ChartOfAccounts", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divEmp", OnSuccess = "CreateSuccess" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.MasterBusinessUnitId)

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.LabelFor(model => model.Code)
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2 text-center">
                                @Html.LabelFor(model => model.Active)
                                <div class="checkbox text-center">
                                    @Html.EditorFor(model => model.Active)
                                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-10">
                                @Html.LabelFor(model => model.Position)
                                @Html.EnumDropDownListFor(model => model.Position, htmlAttributes: new { @class = "form-control", id = "Position" })
                                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2 text-center">
                                @Html.LabelFor(model => model.IsHeader)
                                <div class="checkbox text-center">
                                    @Html.CheckBoxFor(model => model.IsHeader, new Dictionary<string, object> { { "onclick", "showMe('DivLevel')" } })
                                    @Html.ValidationMessageFor(model => model.IsHeader, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group" id="DivLevel">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Level)
                                @Html.DropDownList("Level", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Name)
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Notes)
                                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase" } })
                                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-12 text-right">
                                <input type="submit" value="Save" class="btn btn-primary" style="margin-top:10px" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>>