@model IEnumerable<eShop.Models.AccountBallance>
@{
    Layout = null;
}

@(Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => ((User.IsInRole("OpeningBallanceEdit")) ? "<div class=\"text-center\"><a class=\"btn btn-success btn-xs edit-data\" href=\"" + @Url.Action("Edit", "OpeningBallance", new { id = (model.ChartOfAccountId.ToString() + '_' + model.Month.ToString() + '_' + model.Year.ToString()) }) + "\"><i class=\"fa fa-edit\"></i> Edit</a></div>" : "")).Encoded(false);
        columns.Add(model => model.ChartOfAccount.Code).Titled(@Html.DisplayNameFor(model => model.ChartOfAccountId)).InitialSort(GridSortOrder.Asc);
        columns.Add(model => model.ChartOfAccount.Name).Titled(@Html.DisplayNameFor(model => model.ChartOfAccount.Name));
        columns.Add(model => model.BeginningBallance).Titled(@Html.DisplayNameFor(model => model.BeginningBallance)).Formatted("{0:N2}");
    })
    .Empty("Tidak ada data.")
    .Pageable(pager =>
    {
        pager.PagesToDisplay = 0;
        pager.CurrentPage = 1;
        pager.RowsPerPage = 0;
    })
    .UsingFilterMode(GridFilterMode.Row)
    .Filterable()
    .Sortable()
    .AppendCss("tablegrid-hover table-striped fix-table")
    .Id("data-table")
)