@model eShop.Models.PurchaseOrder

@{
    ViewBag.Title = "Purchase Order";
    ViewBag.Current = "PurchaseOrders";
}

@section Styles {
    @Styles.Render("~/style/mvcgrid")
    @Styles.Render("~/style/MvcDatalist")
    @Styles.Render("~/style/Select2")
}

<style>
    .tablegrid-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.1);
    }
</style>

@Html.Partial("MvcDatalist/_Dialog")

<div class="content-wrapper">
    <section class="content">
        <div class="row">
            <div class="col-md-4">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <i class="fa fa-plus"></i>

                        <h3 class="box-title">Add - Purchase Order</h3>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Id)
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.MasterBusinessUnitId)
                                    @Html.DropDownList("MasterBusinessUnitId", null, "- Pilih Unit Bisnis -", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.MasterBusinessUnitId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.MasterRegionId)
                                    @Html.DatalistFor(model => model.MasterRegionId, new eShop.Models.MasterBusinessUnitRegionDatalist(), new { @class = "datalist2" })
                                    @Html.ValidationMessageFor(model => model.MasterRegionId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.PurchaseRequestId)
                                    @Html.DatalistFor(model => model.PurchaseRequestId, new eShop.Models.OutstandingPurchaseRequestDatalist())
                                    @Html.ValidationMessageFor(model => model.PurchaseRequestId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.SalesOrderId)
                                    @Html.DatalistFor(model => model.SalesOrderId, new eShop.Models.OutstandingSalesOrderDatalist())
                                    @Html.ValidationMessageFor(model => model.SalesOrderId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.MasterWarehouseId)
                                    @Html.DatalistFor(model => model.MasterWarehouseId, new eShop.Models.MasterBusinessRegionWarehouseDatalist(), new { @class = "datalist2" })
                                    @Html.ValidationMessageFor(model => model.MasterWarehouseId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-10">
                                    @Html.LabelFor(model => model.Code)
                                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase" } })
                                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-2 text-center">
                                    @Html.LabelFor(model => model.Active)
                                    <div class="checkbox text-center">
                                        @Html.CheckBoxFor(model => model.Active)
                                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Date)
                                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.MasterSupplierId)
                                    @Html.DatalistFor(model => model.MasterSupplierId, new eShop.Models.MasterBusinessRegionSupplierDatalist())
                                    @Html.ValidationMessageFor(model => model.MasterSupplierId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Notes)
                                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control", @style = "text-transform:uppercase" } })
                                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-6 text-left">
                                        <a href="#" id="cancel" class="btn btn-danger" style="margin-top:10px">
                                            Cancel
                                        </a>
                                    </div>
                                    <div class="col-md-6 text-right">
                                        <input type="submit" value="Save" class="btn btn-primary" style="margin-top:10px" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        }
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->

            <div class="col-md-8">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <div class="col-md-2">
                            <i class="fa fa-info"></i>

                            <h3 class="box-title">Details</h3>
                        </div>
                        <div class="text-right col-md-10">
                            <button id="btnChangeCurrency" class="btn btn-default mx-6" href="@Url.Action("ChangeCurrency", "PurchaseOrders")" ">
                                @Model.MasterCurrency.Code : @Model.Rate.ToString("N2")
                            </button>
                            <label style="font-weight: bold">TOTAL :</label>
                            <input type="text" id="Total" value="@ViewBag.Total" disabled="disabled" style="text-align:right;" />
                            <button id="btnAdd" class="btn btn-success mx-1" href="@Url.Action("DetailsCreate", "PurchaseOrders")">
                                <i class="fa fa-plus"></i> Add
                            </button>
                            <button id="DetailsBatchDelete" class="btn btn-danger mx-1">
                                <i class="fa fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body" style="overflow:auto; white-space: nowrap">
                        @Html.AjaxGrid(Url.Action("DetailsGrid", routeValues: new { Id = Html.ValueFor(model => model.Id) }), new { id = "detail-table" })
                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
            <!-- /.col -->
        </div>
    </section>
</div>
<div class="modal fade" id="detailsModal" role="dialog" aria-hidden="true" data-backdrop="static">
    <div id="detailsContainer">
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/mvcgrid")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/script/Select2")
    @Scripts.Render("~/bundles/unobtrusive")
    @Scripts.Render("~/bundles/MvcDatalist")
    @Scripts.Render("~/script/tableHeadFixer")
    @Scripts.Render("~/script/InputMask")

    <script>
        $.validator.methods.range = function (value, element, param) {
            var globalizedValue = value.replace(",", ".");
            return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
        }

        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
        }
    </script>

    <script>
        [].forEach.call(document.getElementsByClassName('datalist'), function (element) {
            new MvcDatalist(element);
        });

        $('.select2').select2();

        [].forEach.call(document.getElementsByClassName('mvc-grid'), function (element) {
            new MvcGrid(element);
        });

        Inputmask.extendAliases({
            'myNum': {
                alias: 'currency',
                digits: 0,
                digitsOptional: false,
                integerDigits: 12,
                prefix: '',
                groupSeparator: '.',
                radixPoint: ',',
                groupSize: 3,
                rightAlign: false,
                autoUnmask: true
            }
        });

        Inputmask.extendAliases({
            'myNum2': {
                alias: 'currency',
                digits: 2,
                digitsOptional: false,
                integerDigits: 12,
                prefix: '',
                groupSeparator: '.',
                radixPoint: ',',
                groupSize: 3,
                rightAlign: false,
                autoUnmask: true
            }
        });

        Inputmask.extendAliases({
            'myNum10': {
                alias: 'currency',
                digits: 10,
                digitsOptional: false,
                integerDigits: 12,
                prefix: '',
                groupSeparator: '.',
                radixPoint: ',',
                groupSize: 3,
                rightAlign: false,
                autoUnmask: true
            }
        });

        $('#btnAdd').click(function (event) {
            event.preventDefault();
            if ($("#MasterBusinessUnitId").val() === "") {
                bootbox.alert("Unit Bisnis belum dipilih!");
            }
            else if ($("#MasterRegionId").val() === "") {
                bootbox.alert("Wilayah belum dipilih!");
            }
            else {
                var url = $(this).attr("href") + "?purchaseOrderId=" + $("input#Id").val();
                $.get(url, function (data) {
                    $('#detailsContainer').html(data);
                    $('#detailsModal').modal('show');

                    [].forEach.call(document.getElementsByClassName('datalist2'), function (element) {
                        new MvcDatalist(element);
                    });

                    $('form').each(function () {
                        var $el = $(this);
                        $el.data('validator', null);
                        $.validator.unobtrusive.parse($el);
                    });

                    Inputmask("myNum").mask("#Quantity");
                    Inputmask("myNum2").mask("#Price");

                    $("#MasterItemId").on("change", function () {
                        var Id = $("#MasterItemId").val();
                        var data = { id: Id };
                        var options = {};

                        options.url = "/PurchaseOrders/GetMasterUnit";
                        options.type = "POST";
                        options.headers = headers;
                        options.data = JSON.stringify(data);
                        options.contentType = "application/json";
                        options.dataType = "json";
                        options.success = function (msg) {
                            document.getElementById('MasterItemUnitId').value = msg;

                            [].forEach.call(document.getElementsByClassName('datalist2'), function (element) {
                                new MvcDatalist(element).reload();
                            });
                        };
                        options.error = function () {
                            document.getElementById('MasterItemUnitId').value = 0;

                            [].forEach.call(document.getElementsByClassName('datalist2'), function (element) {
                                new MvcDatalist(element).reload();
                            });
                        };
                        $.ajax(options);
                    }).change();
                });
            }
        });

        $('#btnChangeCurrency').click(function (event) {
            event.preventDefault();
            var url = $(this).attr("href") + "?purchaseOrderId=" + $("input#Id").val();
            $.get(url, function (data) {
                $('#detailsContainer').html(data);
                $('#detailsModal').modal('show');

                [].forEach.call(document.getElementsByClassName('datalist2'), function (element) {
                    new MvcDatalist(element);
                });

                $('form').each(function () {
                    var $el = $(this);
                    $el.data('validator', null);
                    $.validator.unobtrusive.parse($el);
                });

                $("#MasterCurrencyId").on("change", function () {
                    var id = $("#MasterCurrencyId").val();
                    var data = { Id: id };
                    var options = {};

                    options.url = "/PurchaseOrders/GetCurrencyRate";
                    options.type = "POST";
                    options.headers = headers;
                    options.data = JSON.stringify(data);
                    options.contentType = "application/json";
                    options.dataType = "json";
                    options.success = function (rate) {
                        document.getElementById('Rate').value = rate;
                    };
                    options.error = function () {
                    };
                    $.ajax(options);
                }).change();

                Inputmask("myNum10").mask("#Rate");
            });
        });

        function CreateSuccess(data) {
            if (data !== "success") {
                $('#detailsContainer').html(data);
                return;
            }
            $('#detailsModal').modal('hide');
            $('#detailsContainer').html("");

            var grid = new MvcGrid(document.querySelector('#detail-table'));
            grid.reload();

            var param = { purchaseOrderId: $("#Id").val() };
            var options = {};

            options.url = "/PurchaseOrders/GetTotal";
            options.type = "POST";
            options.headers = headers;
            options.data = JSON.stringify(param);
            options.contentType = "application/json";
            options.dataType = "json";
            options.success = function (msg) {
                document.getElementById('Total').value = msg;
            };
            $.ajax(options);
        }

        function EditSuccess(data) {
            if (data !== "success") {
                $('#detailsContainer').html(data);
                return;
            }
            $('#detailsModal').modal('hide');
            $('#detailsContainer').html("");

            var grid = new MvcGrid(document.querySelector('#detail-table'));
            grid.reload();

            var param = { purchaseOrderId: $("#Id").val() };
            var options = {};

            options.url = "/PurchaseOrders/GetTotal";
            options.type = "POST";
            options.headers = headers;
            options.data = JSON.stringify(param);
            options.contentType = "application/json";
            options.dataType = "json";
            options.success = function (msg) {
                document.getElementById('Total').value = msg;
            };
            $.ajax(options);
        }

        function ChangeCurrencySuccess(data) {
            if (data.Status !== "success") {
                $('#detailsContainer').html(data);
                return;
            }
            $('#detailsModal').modal('hide');
            $('#detailsContainer').html("");

            var grid = new MvcGrid(document.querySelector('#detail-table'));
            grid.reload();

            document.querySelector('#btnChangeCurrency').innerHTML = data.Message;

            var param = { purchaseOrderId: $("#Id").val() };
            var options = {};

            options.url = "/Purchases/GetTotal";
            options.type = "POST";
            options.headers = headers;
            options.data = JSON.stringify(param);
            options.contentType = "application/json";
            options.dataType = "json";
            options.success = function (msg) {
                document.getElementById('Total').value = msg;
            };
            $.ajax(options);
        }

        var token = $('input[name="__RequestVerificationToken"]').val();
        var headers = {};
        headers['__RequestVerificationToken'] = token;

        $(document).ready(function ()
        {
            $("#PurchaseRequestId").on("change", function () {
                var purchaseRequestId = $("#PurchaseRequestId").val();
                var purchaseOrderId = $("#Id").val();
                var data = { PurchaseOrderId: purchaseOrderId, PurchaseRequestId: purchaseRequestId };
                var options = {};
                var grid = new MvcGrid(document.querySelector('#detail-table'));

                if (purchaseRequestId !== 0 && purchaseRequestId !== '') {
                    options.url = "/PurchaseOrders/PopulateDetails";
                    options.type = "POST";
                    options.headers = headers;
                    options.data = JSON.stringify(data);
                    options.contentType = "application/json";
                    options.dataType = "json";
                    options.success = function (obj) {
                        document.getElementById('SalesOrderId').value = "";
                        document.getElementById('MasterRegionId').value = obj.MasterRegionId;
                        document.getElementById('MasterBusinessUnitId').value = obj.MasterBusinessUnitId;
                        document.getElementById('MasterSupplierId').value = obj.MasterSupplierId;
                        document.getElementById('MasterWarehouseId').value = obj.MasterWarehouseId;
                        document.getElementById('Notes').value = obj.Notes;
                        document.getElementById('Total').value = obj.Total;
                        document.querySelector('#btnChangeCurrency').innerHTML = obj.Currency;

                        $(document.getElementById('MasterBusinessUnitId')).trigger("change");

                        [].forEach.call(document.getElementsByClassName('datalist'), function (element) {
                            new MvcDatalist(element).reload();
                        });

                        grid.reload();
                    };
                    options.error = function () {
                        document.getElementById('Code').value = "";
                        document.getElementById('MasterBusinessUnitId').value = "0";
                        grid.reload();
                    };
                    $.ajax(options);
                }
            }).change();

 //           $(document).ready(function () {
                $("#SalesOrderId").on("change", function () {
                    var salesOrderId = $("#SalesOrderId").val();
                    var purchaseOrderid = $("#Id").val();
                    var data = { PurchaseOrderid: purchaseOrderid, SalesOrderId: salesOrderId };
                    var options = {};
                    var grid = new MvcGrid(document.querySelector('#detail-table'));

                    if (salesOrderId !== 0 && salesOrderId !== '') {
                        //options.url = "/PurchaseOrders/PopulateDetails";
                        options.url = "/PurchaseOrders/PopulateSalesOrderDetails";
                        options.type = "POST";
                        options.headers = headers;
                        options.data = JSON.stringify(data);
                        options.contentType = "application/json";
                        options.dataType = "json";
                        options.success = function (obj) {
                            document.getElementById('PurchaseRequestId').value = "";
                            document.getElementById('MasterRegionId').value = obj.MasterRegionId;
                            document.getElementById('MasterBusinessUnitId').value = obj.MasterBusinessUnitId;
                           // document.getElementById('MasterCustomerId').value = obj.MasterCustomerId;
                            document.getElementById('MasterWarehouseId').value = obj.MasterWarehouseId;
                            document.getElementById('Notes').value = obj.Notes;
                            document.getElementById('Total').value = obj.Total;
                            document.querySelector('#btnChangeCurrency').innerHTML = obj.Currency;

                            $(document.getElementById('MasterBusinessUnitId')).trigger("change");

                            [].forEach.call(document.getElementsByClassName('datalist'), function (element) {
                                new MvcDatalist(element).reload();
                            });

                            grid.reload();
                        };
                        options.error = function () {
                            document.getElementById('Code').value = "";
                            document.getElementById('MasterBusinessUnitId').value = "0";
                            grid.reload();
                        };
                        $.ajax(options);
                    }
                }).change();
       //     });

            $("#DetailsBatchDelete").click(function ()
            {
                var selectedIDs = new Array();
                $('#detail-table tbody tr').find('td:first :checkbox').each(function ()
                {
                    if ($(this).prop('checked'))
                    {
                        selectedIDs.push($(this).val());
                    }
                });

                if (selectedIDs.length <= 0)
                {
                    bootbox.alert("Pilih salah satu data yang akan dihapus.");
                }
                else
                {
                    bootbox.confirm("Apakah anda yakin akan menghapus " + selectedIDs.length + " data?", function (result)
                    {
                        if (result)
                        {
                            var options = {};
                            options.url = "/PurchaseOrders/DetailsBatchDelete";
                            options.type = "POST";
                            options.headers = headers;
                            options.data = JSON.stringify(selectedIDs);
                            options.contentType = "application/json";
                            options.dataType = "json";
                            options.success = function (msg)
                            {
                                bootbox.alert(msg);

                                var grid = new MvcGrid(document.querySelector('#detail-table'));
                                grid.reload();

                                var param = { purchaseOrderId: $("#Id").val() };
                                var options2 = {};

                                options2.url = "/PurchaseOrders/GetTotal";
                                options2.type = "POST";
                                options2.headers = headers;
                                options2.data = JSON.stringify(param);
                                options2.contentType = "application/json";
                                options2.dataType = "json";
                                options2.success = function (msg)
                                {
                                    document.getElementById('Total').value = msg;
                                };
                                $.ajax(options2);
                            };
                            options.error = function ()
                            {
                                bootbox.alert("Terjadi kesalahan saat menghapus.");
                            };
                            $.ajax(options);
                        }
                    });
                }
            });

            $("#cancel").click(function () {
                var data = { id: $("input#Id").val() };
                var options = {};
                options.url = "/PurchaseOrders/Cancel";
                options.type = "POST";
                options.headers = headers;
                options.data = JSON.stringify(data);
                options.contentType = "application/json";
                options.dataType = "json";
                options.success = function (msg) {
                    window.location.href = '@Url.Action("Index", "PurchaseOrders")';
                };
                options.error = function () {
                    window.location.href = '@Url.Action("Index", "PurchaseOrders")';
                };
                $.ajax(options);
            });

            $("#MasterRegionId").on("change", function () {
                var id = $("#Id").val();
                var masterBusinessUnitId = $("#MasterBusinessUnitId").val();
                var masterRegionId = $("#MasterRegionId").val();
                var data = { Id: id, MasterBusinessUnitId: masterBusinessUnitId, MasterRegionId: masterRegionId };
                var options = {};

                if (masterRegionId !== 0 && masterRegionId !== '') {
                    if ($("#MasterBusinessUnitId").val() === "") {
                        bootbox.alert("Unit Bisnis belum dipilih!");
                        document.getElementById('MasterRegionId').value = "0";
                    }
                    else {
                        options.url = "/PurchaseOrders/GetCode";
                        options.type = "POST";
                        options.headers = headers;
                        options.data = JSON.stringify(data);
                        options.contentType = "application/json";
                        options.dataType = "json";
                        options.success = function (code) {
                            document.getElementById('Code').value = code;

                            [].forEach.call(document.getElementsByClassName('datalist'), function (element) {
                                new MvcDatalist(element).reload();
                            });
                        };
                        options.error = function () {
                            document.getElementById('Code').value = "";
                            grid.reload();
                        };
                        $.ajax(options);
                    }
                }
            }).change();

            $("#MasterBusinessUnitId").on("change", function () {
                var id = $("#Id").val();
                var masterBusinessUnitId = $("#MasterBusinessUnitId").val();
                var masterRegionId = $("#MasterRegionId").val();
                var data = { Id: id, MasterBusinessUnitId: masterBusinessUnitId, MasterRegionId: masterRegionId };
                var options = {};

                if (masterRegionId !== 0 && masterRegionId !== '') {
                    options.url = "/PurchaseOrders/GetCode";
                    options.type = "POST";
                    options.headers = headers;
                    options.data = JSON.stringify(data);
                    options.contentType = "application/json";
                    options.dataType = "json";
                    options.success = function (code) {
                        document.getElementById('Code').value = code;

                        [].forEach.call(document.getElementsByClassName('datalist'), function (element) {
                            new MvcDatalist(element).reload();
                        });
                    };
                    options.error = function () {
                        document.getElementById('Code').value = "";
                    };
                    $.ajax(options);
                }
            }).change();
        });

        document.addEventListener('reloadend', function (e) {
            if (e.detail.grid.element.id == 'detail-table') {
                $('#CheckAll').click(function () {
                    var checkedStatus = this.checked;
                    $('#detail-table tbody tr').find('td:first :checkbox').each(function () {
                        $(this).prop('checked', checkedStatus);
                    });
                });

                $('#detail-table').on("click", ".edit-data", function (event) {
                    event.preventDefault();
                    var url = $(this).attr("href");
                    $.get(url, function (data) {
                        $('#detailsContainer').html(data);
                        $('#detailsModal').modal('show');

                        [].forEach.call(document.getElementsByClassName('datalist2'), function (element) {
                            new MvcDatalist(element);
                        });

                        $('form').each(function () {
                            var $el = $(this);
                            $el.data('validator', null);
                            $.validator.unobtrusive.parse($el);
                        });

                        Inputmask("myNum").mask("#Quantity");
                        Inputmask("myNum2").mask("#Price");

                        $("#MasterItemId").on("change", function () {
                            var Id = $("#MasterItemId").val();
                            var data = { id: Id };
                            var options = {};

                            options.url = "/PurchaseOrders/GetMasterUnit";
                            options.type = "POST";
                            options.headers = headers;
                            options.data = JSON.stringify(data);
                            options.contentType = "application/json";
                            options.dataType = "json";
                            options.success = function (msg) {
                                document.getElementById('MasterItemUnitId').value = msg;

                                [].forEach.call(document.getElementsByClassName('datalist2'), function (element) {
                                    new MvcDatalist(element).reload();
                                });
                            };
                            options.error = function () {
                                document.getElementById('MasterItemUnitId').value = 0;

                                [].forEach.call(document.getElementsByClassName('datalist2'), function (element) {
                                    new MvcDatalist(element).reload();
                                });
                            };
                            $.ajax(options);
                        }).change();
                    });
                });

                $('.fix-table').tableHeadFixer({ left: 2 });
            }
        });
    </script>
}