@model IEnumerable<eShop.Models.MasterItem>
@{
    Layout = null;
}

@(Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => ((User.IsInRole("MasterItemsView")) ? "<div class=\"text-center\"><a class=\"btn btn-primary btn-xs view-data\" href=\"" + @Url.Action("Details", "MasterItems", new { id = model.Id }) + "\"><i class=\"fa fa-eye\"></i> View</a>" : "") +
            ((User.IsInRole("MasterItemsEdit")) ? "&nbsp;<a class=\"btn btn-success btn-xs dateedit-data\" href=\"" + @Url.Action("DateEdit", "MasterItems", new { id = model.Id }) + "\"><i class=\"fa fa-edit\"></i> Ubah Tanggal</a></div>" : "")).Encoded(false);
            columns.Add(model => model.User.UserName).Titled("User");
            columns.Add(model => Html.CheckBox(model.Id.ToString(), new { id = model.Id.ToString(), value = model.Id.ToString() })).Titled(Html.CheckBox("CheckAll"));
            columns.Add(model => ((User.IsInRole("MasterItemsEdit")) ? "<div class=\"text-center\"><a class=\"btn btn-success edit-data btn-xs\" href=\"" + @Url.Action("DetailsEdit", "MasterItems", new { id = model.Id }) + "\"><i class=\"fa fa-edit\"></i> Edit</a>" : "")).Encoded(false);
            //columns.Add(model => model.MasterUnit.Code).Titled(@Html.DisplayNameFor(model => model.MasterUnit.Code));
            //columns.Add(model => model.MasterUnit.Name).Titled(@Html.DisplayNameFor(model => model.MasterUnit.Name));
            //columns.Add(model => model.MasterUnit.Ratio).Titled(@Html.DisplayNameFor(model => model.MasterUnit.Ratio));
            //columns.Add(model => model.Default).Titled(@Html.DisplayNameFor(model => model.Default)).RenderedAs(model => model.Default == true ? "&#x2713;" : "&#x2717;").Encoded(false);
            columns.Add(model => model.Active).Titled(@Html.DisplayNameFor(model => model.Active)).RenderedAs(model => model.Active == true ? "&#x2713;" : "&#x2717;").Encoded(false);
            columns.Add(model => model.Updated).Titled(@Html.DisplayNameFor(model => model.Updated)).InitialSort(GridSortOrder.Desc);
        })
        .Empty("Tidak ada data.")
        .Pageable(pager =>
        {
            pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 10, "10" }, { 100, "100" } };
            pager.ShowPageSizes = true;
            pager.PagesToDisplay = 5;
            pager.CurrentPage = 1;
            pager.RowsPerPage = 10;
        })
        .UsingFilterMode(GridFilterMode.Row)
        .Filterable()
        .Sortable()
        .AppendCss("tablegrid-hover table-striped fix-table")
        .Id("data-table")
)