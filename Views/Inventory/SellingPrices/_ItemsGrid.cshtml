@model IEnumerable<eShop.Models.SellingPriceItem>
@{
    Layout = null;
}

@(Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => Html.CheckBox(model.Id.ToString(), new { id = model.Id.ToString(), value = model.Id.ToString() })).Titled(Html.CheckBox("CheckItemAll"));
            columns.Add(model => ((User.IsInRole("SellingPricesEdit")) ? "<div class=\"text-center\"><a class=\"btn btn-success edit-data btn-xs\" href=\"" + @Url.Action("ItemsEdit", "SellingPrices", new { id = model.Id }) + "\"><i class=\"fa fa-edit\"></i> Edit</a>" : "")).Encoded(false);
            columns.Add(model => model.MasterItem.Name).Titled(@Html.DisplayNameFor(model => model.MasterItem.Name));
            columns.Add(model => model.MasterItemUnit.MasterUnit.Code).Titled(@Html.DisplayNameFor(model => model.MasterItemUnit.MasterUnit.Code));
            columns.Add(model => model.Price).Titled(@Html.DisplayNameFor(model => model.Price)).Formatted("{0:N2}");
            columns.Add(model => model.Created).Titled(@Html.DisplayNameFor(model => model.Created));
            columns.Add(model => model.User.UserName).Titled(@Html.DisplayNameFor(model => model.User.UserName));
            columns.Add(model => model.Updated).Titled(@Html.DisplayNameFor(model => model.Updated)).InitialSort(GridSortOrder.Desc);
        })
        .Empty("Tidak ada data.")
        .Pageable(pager =>
        {
            pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 10, "10" }, { 100, "100" } };
            pager.ShowPageSizes = true;
            pager.PagesToDisplay = 5;
            pager.CurrentPage = 1;
            pager.RowsPerPage = 10;
        })
        .Empty("Tidak ada data.")
        .Sortable()
        .AppendCss("tablegrid-hover table-striped fix-table")
        .Id("item-table")
)